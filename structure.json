{
  "src": {
    "models": {
      "Item.js": "const mongoose = require('mongoose');  \r\n  \r\nconst itemSchema = new mongoose.Schema({  \r\n  name: {  \r\n    type: String,  \r\n    required: true,  \r\n    index: true  \r\n  },  \r\n  imageUrl: String,  \r\n  description: String,  \r\n  productionCost: Number,  \r\n  estimatedProfit: Number,  \r\n  likes: {  \r\n    type: Number,  \r\n    default: 0  \r\n  },  \r\n  searches: {  \r\n    type: Number,  \r\n    default: 1  \r\n  },  \r\n  lastUpdated: {  \r\n    type: Date,  \r\n    default: Date.now  \r\n  }  \r\n}, { timestamps: true });  \r\n  \r\nmodule.exports = mongoose.model('Item', itemSchema);"
    },
    "utils": {
      "email.js": "const nodemailer = require('nodemailer');\r\n\r\nconst transporter = nodemailer.createTransport({\r\n  service: 'gmail',\r\n  auth: {\r\n    user: process.env.GMAIL_USER || 'andy46587@gmail.com',\r\n    pass: process.env.GMAIL_PASS || 'vfkv sqwd varz iwtc'\r\n  }\r\n});\r\n\r\n// ‚úÖ Versi√≥n reutilizable: permite enviar cualquier correo con HTML personalizado\r\nasync function enviarCorreo(destinatario, asunto, html) {\r\n  const mailOptions = {\r\n    from: `\"Recetas Dofus\" <${process.env.GMAIL_USER || 'andy46587@gmail.com'}>`,\r\n    to: destinatario,\r\n    subject: asunto,\r\n    html\r\n  };\r\n\r\n  try {\r\n    const info = await transporter.sendMail(mailOptions);\r\n    console.log(`‚úÖ Correo enviado a ${destinatario}: ${info.response}`);\r\n  } catch (error) {\r\n    console.error('‚ùå Error al enviar correo:', error);\r\n  }\r\n}\r\n\r\n// üü¢ (Opcional) Funci√≥n espec√≠fica para verificaci√≥n, que usa la gen√©rica\r\nasync function enviarCorreoVerificacion(destinatario, token) {\r\n  const BASE_URL = process.env.BASE_URL || 'http://localhost:3000';\r\n  const urlVerificacion = `${BASE_URL}/api/verify?token=${token}`;\r\n\r\n  const html = `\r\n    <h2>¬°Bienvenido a Recetas Dofus!</h2>\r\n    <p>Hac√© clic en el siguiente bot√≥n para verificar tu cuenta:</p>\r\n    <a href=\"${urlVerificacion}\" style=\"background-color: #4CAF50; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">Verificar Cuenta</a>\r\n    <p>Este enlace expirar√° en 1 hora.</p>\r\n  `;\r\n\r\n  await enviarCorreo(destinatario, 'Verific√° tu cuenta en Recetas Dofus', html);\r\n}\r\n\r\n// ‚úÖ Exporta la funci√≥n gen√©rica como principal\r\nmodule.exports = enviarCorreo;\r\n",
      "generarTopRecetas.js": "",
      "jwt.js": "const jwt = require('jsonwebtoken');\r\n\r\nconst SECRET_KEY = process.env.JWT_SECRET || 'claveSecretaUltraSegura';\r\n\r\n// ‚úÖ Permitir duraci√≥n personalizada (por defecto 1h)\r\nfunction generateToken(payload, expiresIn = '1h') {\r\n  return jwt.sign(payload, SECRET_KEY, { expiresIn });\r\n}\r\n\r\nfunction verifyToken(token) {\r\n  return jwt.verify(token, SECRET_KEY);\r\n}\r\n\r\nmodule.exports = { generateToken, verifyToken };\r\n",
      "scraper.js": "const axios = require('axios');\r\nrequire('dotenv').config(); \r\n\r\nconsole.log('[DEBUG] scraper.js ha sido cargado correctamente');\r\n\r\nasync function obtenerIngredientes(itemId) {\r\n    try {\r\n        // Construir la URL de la API con el ID del objeto\r\n        const apiUrl = `https://api.dofusdb.fr/recipes?resultId=${itemId}&lang=fr`;\r\n        console.debug(`[DEBUG] Solicitando datos desde: ${apiUrl}`);\r\n\r\n        // Hacer la solicitud HTTP\r\n        const response = await axios.get(apiUrl);\r\n        const data = response.data.data[0]; // Extraer el primer resultado de la API\r\n\r\n        if (!data) {\r\n            console.error(`[ERROR] No se encontraron datos para el objeto con ID: ${itemId}`);\r\n            return [];\r\n        }\r\n\r\n        // Extraer los ingredientes y sus cantidades\r\n        const ingredients = data.ingredients.map((ingredient, index) => ({\r\n            id: ingredient.id,\r\n            name: ingredient.name.es, // Nombre en espa√±ol\r\n            image: ingredient.img || '/default-image.png', // Imagen del ingrediente\r\n            quantity: data.quantities[index] || 1 // Cantidad correspondiente\r\n        }));\r\n\r\n        console.debug('[DEBUG] Ingredientes extra√≠dos correctamente:', ingredients);\r\n        return ingredients;\r\n    } catch (error) {\r\n        console.error(`[ERROR] Error al obtener ingredientes:`, error.message);\r\n        return [];\r\n    }\r\n}\r\n\r\n// Exportar la funci√≥n para ser utilizada en otros archivos\r\nmodule.exports = { obtenerIngredientes };\r\n"
    }
  }
}