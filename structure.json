{
  "public": {
    "ads.txt": "google.com, pub-8948109105283119, DIRECT, f08c47fec0942fa0\n",
    "blog.html": "<!-- public/blog.html -->  \n<!DOCTYPE html>  \n<html lang=\"es\">  \n<head>  \n  <!-- Similar a index.html con los metadatos y estilos -->  \n  <title>Blog de Objetos - DofusDB</title>  \n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">  \n  <link rel=\"stylesheet\" href=\"css/style.css\">  \n  <!-- Añadir FontAwesome para los iconos de like -->  \n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">  \n</head>  \n<body>  \n  <!-- Navegación -->  \n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">  \n    <div class=\"container\">  \n      <a class=\"navbar-brand\" href=\"index.html\">DofusDB</a>  \n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">  \n        <span class=\"navbar-toggler-icon\"></span>  \n      </button>  \n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">  \n        <ul class=\"navbar-nav\">  \n          <li class=\"nav-item\">  \n            <a class=\"nav-link\" href=\"index.html\">Inicio</a>  \n          </li>  \n          <li class=\"nav-item\">  \n            <a class=\"nav-link active\" href=\"blog.html\">Blog</a>  \n          </li>  \n        </ul>  \n      </div>  \n    </div>  \n  </nav>  \n  \n  <div class=\"container mt-4\">  \n    <h1 class=\"text-center\">Blog de Objetos</h1>  \n      \n    <!-- Filtros -->  \n    <div class=\"row mb-4\">  \n      <div class=\"col-md-6\">  \n        <label for=\"ordenarPor\" class=\"form-label\">Ordenar por:</label>  \n        <select id=\"ordenarPor\" class=\"form-select\">  \n          <option value=\"reciente\">Más recientes</option>  \n          <option value=\"valor\">Mayor valor</option>  \n        </select>  \n      </div>  \n      <div class=\"col-md-6\">  \n        <label for=\"filtroValor\" class=\"form-label\">Valor mínimo:</label>  \n        <input type=\"number\" id=\"filtroValor\" class=\"form-control\" min=\"0\" value=\"0\">  \n      </div>  \n    </div>  \n      \n    <button id=\"aplicarFiltros\" class=\"btn btn-primary mb-4\">Aplicar filtros</button>  \n      \n    <!-- Contenedor de posts -->  \n    <div id=\"contenedor-posts\" class=\"card-container\">\n  \n      <!-- Los posts se cargarán aquí dinámicamente -->  \n    </div>  \n  </div>  \n    \n  <!-- Modal para comentarios -->  \n  <div class=\"modal fade\" id=\"comentariosModal\" tabindex=\"-1\">  \n    <div class=\"modal-dialog\">  \n      <div class=\"modal-content\">  \n        <div class=\"modal-header\">  \n          <h5 class=\"modal-title\">Comentarios</h5>  \n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>  \n        </div>  \n        <div class=\"modal-body\">  \n          <div id=\"listaComentarios\">  \n            <!-- Comentarios cargados dinámicamente -->  \n          </div>  \n          <form id=\"formComentario\" class=\"mt-3\">  \n            <input type=\"hidden\" id=\"postId\">  \n            <div class=\"mb-3\">  \n              <textarea id=\"textoComentario\" class=\"form-control\" rows=\"3\" placeholder=\"Escribe tu comentario...\"></textarea>  \n            </div>  \n            <button type=\"submit\" class=\"btn btn-primary\">Enviar comentario</button>  \n          </form>  \n        </div>  \n      </div>  \n    </div>  \n  </div>  \n  \n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>  \n  <script type=\"module\" src=\"js/blog.js\"></script>  \n  <script type=\"module\" src=\"js/verificarSesion.js\"></script>  \n</body>  \n</html>",
    "components": {
      "videoModal.html": "<!-- components/videoModal.html -->\n<div id=\"videoModal\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"videoModalLabel\" aria-hidden=\"true\">\n  <!-- Cambiado modal-lg por modal-custom-left para tamaño y posición -->\n  <div class=\"modal-dialog modal-custom-left\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"videoModalLabel\">¡Bienvenido!</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Cerrar\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"ratio ratio-16x9\">\n          <iframe\n            id=\"youtubePlaylist\"\n            src=\"https://www.youtube.com/embed/LbfGI-TvdZU?list=PLUT8lOtOMxzpuFMfcKvI1SPE1ivmabsj8&autoplay=1&mute=1&loop=1&playlist=PLUT8lOtOMxzpuFMfcKvI1SPE1ivmabsj8\"\n            title=\"Reproducción automática\"\n            allow=\"autoplay; encrypted-media\"\n            allowfullscreen\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    "css": {
      "style.css": "body {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 20px;\n  background-image: url(\"../images/fondooficion.JPG\");\n\n /* Ruta a la imagen */\n  background-size: cover; /* Ajusta la imagen para que cubra toda la pantalla */\n  background-position: center; /* Centra la imagen */\n  background-attachment: fixed; /* Hace que el fondo no se desplace al hacer scroll */\n  background-repeat: no-repeat; /* Evita que la imagen se repita */\n}\nlabel {\n  color: #000; /* Negro puro */\n  font-weight: bold; /* Negrita */\n}\n\n\nh1 {\n  \n  color: black; /* Texto negro */\n  padding: 10px 20px;\n  \n  border-radius: 10px;\n  margin: 20px auto;\n  text-align: center;\n  text-shadow:  \n    -2px -2px 0 white,  \n     2px -2px 0 white,  \n    -2px  2px 0 white,  \n     2px  2px 0 white; /* Borde blanco */\n}\nh1:hover {\n  animation: shake-vertical 0.8s linear both;\n  \n}\n\n@keyframes shake-vertical {\n  0%, 100% { transform: translateY(0); }\n  10%, 30%, 50%, 70% { transform: translateY(-8px); }\n  20%, 40%, 60% { transform: translateY(8px); }\n  80% { transform: translateY(6.4px); }\n  90% { transform: translateY(-6.4px); }\n}\nbutton {\n  background: #fbca1f;\n  font-family: inherit;\n  padding: 0.6em 1.3em;\n  font-weight: 900;\n  font-size: 18px;\n  border: 3px solid black;\n  border-radius: 0.4em;\n  box-shadow: 0.1em 0.1em;\n  cursor: pointer;\n  transition: all 0.1s ease-in-out;\n}\n\nbutton:hover {\n  transform: translate(-0.05em, -0.05em);\n  box-shadow: 0.15em 0.15em;\n}\n\nbutton:active {\n  transform: translate(0.05em, 0.05em);\n  box-shadow: 0.05em 0.05em;\n}\n\n\n@keyframes rotate-center {\n  0% { transform: rotate(0); }\n  100% { transform: rotate(360deg); }\n}\n\n\nform {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n\n\n/* Contenedor principal que agrupa las secciones */\n.container {\n  flex-wrap: wrap;\n  display: flex; /* Hace que las secciones estén una al lado de la otra */\n  justify-content: space-between; /* Espaciado entre secciones */\n  gap: 20px; /* Espacio entre ellas */\n  padding: 20px;\n  align-items: flex-start; /* Alinea las secciones al inicio */\n}\n\n/* Estilos generales para cada sección */\n.section {\n  flex: 1; /* Hace que ambas secciones ocupen el mismo espacio */\n  background-color: #fff;\n  border: 4px solid #000000;\n  padding: 15px;\n  margin-bottom: 20px;\n  border-radius: 20px;\n  min-width: 250px; /* Evita que las secciones se encojan demasiado */\n  text-align: center; /* Centra el contenido */\n}\n\n/* Ajustar tamaño de los inputs */\ninput {\n  width: 100%;\n  max-width: 300px;\n  box-sizing: border-box;\n  margin-bottom: 10px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n\n.scale-up-horizontal-center {\n  animation: scale-up-horizontal-center 0.4s;\n}\n\n@keyframes scale-up-horizontal-center {\n  0% {\n     transform: scaleX(0.2);\n  }\n  100% {\n     transform: scaleX(1);\n  }\n}\n#recipeSummary {\n  background: linear-gradient(135deg, #e5ece6, #107a04); /* Degradado verde */\n  color: white; /* Para mejorar la visibilidad del texto */\n}\n\n#calculationDetails {\n  background: linear-gradient(135deg, #e8ebee, #0D47A1); /* Degradado azul */\n  color: white;\n}\n#recipeSummary:hover {\n  background: linear-gradient(135deg, #66bb6a, #2e7d32);\n}\n\n#calculationDetails:hover {\n  background: linear-gradient(135deg, #64b5f6, #1e88e5);\n}\n\n\n/* Hacer responsive */\n\n.card-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n}\n\n.card {\n  width: 100%;\n  max-width: 320px;\n  margin: 20px auto;\n  border: 4px solid black;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n}\n.text-description {\n  font-size: 0.9rem;\n  color: #555;\n  font-style: italic;\n  margin-bottom: 8px;\n}\n\n@media (max-width: 768px) {\n  .container {\n    flex-direction: column;\n    align-items: center;\n    padding: 10px;\n  }\n\n  .section {\n    width: 100%;\n    padding: 15px;\n    margin-bottom: 20px;\n  }\n\n  .card * {\n    font-size: 14px;\n    word-wrap: break-word;\n    overflow-wrap: break-word;\n  }\n\n  body {\n    padding: 10px;\n  }\n}\n"
    },
    "images": {
      "favicon.png": "(binary)",
      "fondooficion.JPG": "(binary)",
      "linkedin-logo.png": "(binary)",
      "seccion1.JPG": "(binary)",
      "seccion2.JPG": "(binary)",
      "youtube.png": "(binary)"
    },
    "index.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <!-- Bootstrap CSS -->\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Búsqueda de Recetas en Dofus - Calculador de Ganancias</title>\n\n  <!-- SEO Básico -->\n  <meta name=\"description\" content=\"Buscador de recetas de objetos de Dofus. Calcula tus ganancias de forma rápida y sencilla.\">\n  <meta name=\"keywords\" content=\"Dofus, recetas, objetos, kamas, búsqueda, economía, alquimia, herrero, crudo, oficio\">\n  <meta name=\"robots\" content=\"index, follow\">\n  <meta name=\"author\" content=\"Jorge Fernández Rojo Andrés\">\n  <link rel=\"canonical\" href=\"https://recetasdofus.com.ar\">\n\n  <!-- Open Graph -->\n  <meta property=\"og:title\" content=\"Búsqueda de Recetas - DofusDB\">\n  <meta property=\"og:description\" content=\"Calculá cuánto ganás al fabricar objetos en Dofus.\">\n  <meta property=\"og:image\" content=\"https://recetasdofus.com.ar/images/favicon.png\">\n  <meta property=\"og:url\" content=\"https://recetasdofus.com.ar\">\n  <meta property=\"og:type\" content=\"website\">\n\n  <link rel=\"stylesheet\" href=\"css/style.css\">\n  <link rel=\"icon\" href=\"images/favicon.png\" type=\"image/png\">\n  \n  <!-- Google tag (gtag.js) -->\n  <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8948109105283119\" crossorigin=\"anonymous\"></script>\n  <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-GHSB8ZF8WD\"></script>\n  <!-- Google Tag Manager y Consent Mode (ver archivos: gtag-init.js, consent-mode.js, gtag-config.js) -->\n  \n   <script src=\"js/gtag-init.js\"></script>\n   <script src=\"js/consent-mode.js\"></script>\n  <script src=\"js/gtag-config.js\"></script>\n</head>\n\n<body>\n\n<!-- Barra de navegación -->  \n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">  \n    <div class=\"container\">  \n      <a class=\"navbar-brand\" href=\"index.html\">DofusDB</a>  \n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">  \n        <span class=\"navbar-toggler-icon\"></span>  \n      </button>  \n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">  \n        <ul class=\"navbar-nav me-auto\">  \n          <li class=\"nav-item\">  \n            <a class=\"nav-link active\" href=\"index.html\">Inicio</a>  \n          </li>  \n          <li class=\"nav-item\">  \n            <a class=\"nav-link\" href=\"blog.html\">Blog</a>  \n          </li>  \n        </ul>  \n        <div class=\"d-flex\">  \n          <!-- Botones para NO logueados -->  \n          <button id=\"btnRedirectLogin\" class=\"btn btn-outline-light me-2\" hidden>Iniciar Sesión</button>  \n          <button id=\"btnRedirectRegister\" class=\"btn btn-warning\" hidden>Registrarse</button>  \n            \n          <!-- Botones para logueados -->  \n          <button id=\"btnUltimasRecetas\" class=\"btn btn-outline-light me-2\" hidden>Últimas Recetas</button>  \n          <button id=\"btnVolversePremium\" class=\"btn btn-warning me-2\" hidden>Volverse Premium</button>  \n          <button id=\"btnBeneficios\" class=\"btn btn-outline-light me-2\" hidden>Ver Beneficios Premium</button>  \n          <button id=\"btnLogout\" class=\"btn btn-danger\" hidden>Cerrar Sesión</button>  \n        </div>  \n      </div>  \n    </div>  \n  </nav> \n<!-- Nueva sección introductoria -->\n<section class=\"container mt-5 d-flex justify-content-center\">\n  <div class=\"p-4 bg-white rounded shadow\" style=\"max-width: 600px;\">\n    <h2 class=\"text-center\">¿Qué es Recetas Dofus?</h2>\n    <p class=\"mt-3\">\n      Recetas Dofus es una herramienta gratuita pensada para los jugadores de Dofus que desean maximizar sus ganancias dentro del juego. \n      Buscá recetas de objetos, calculá tus costos de fabricación y estimá tus ganancias de forma rápida y sencilla.\n    </p>\n  </div>\n</section>\n\n<h1 class=\"text-center mt-4\">Buscador de Recetas en Dofus y Calculador de Ganancias</h1>\n\n<!-- Formulario de búsqueda -->\n<form id=\"searchForm\" class=\"text-center mt-3\">\n  <label for=\"objectName\">Nombre del objeto:</label>\n  <input type=\"text\" id=\"objectName\" placeholder=\"Buscar receta\" required>\n  <button type=\"submit\" class=\"btn btn-warning\">Buscar</button>\n</form>\n<!-- 📢 Bloque de anuncio AdSense -->\n<div class=\"d-flex justify-content-center my-4\">\n  <!-- anuncio_index_superior -->\n  <ins class=\"adsbygoogle\"\n       style=\"display:block\"\n       data-ad-client=\"ca-pub-8948109105283119\"\n       data-ad-slot=\"9450520549\"\n       data-ad-format=\"auto\"\n       data-full-width-responsive=\"true\"></ins>\n  <script>\n       (adsbygoogle = window.adsbygoogle || []).push({});\n  </script>\n</div>\n\n<!-- Contenedor principal -->\n<main class=\"container\">\n  <section id=\"recipeSummary\" class=\"section scale-up-horizontal-center\">\n    <h2 id=\"nombreObjeto\"></h2>\n    <h3>Precio de Venta:</h3>\n    <input type=\"number\" id=\"precioObjeto\" class=\"price-input\" placeholder=\"Ingrese precio\" oninput=\"calcularGanancia()\">\n    <h3>Receta:</h3>\n    <ul id=\"ingredientes\"></ul>\n    <h3>Gasto: <span id=\"gasto\">0</span> K</h3>\n    <h3>Ganancia: <span id=\"ganancia\">0</span> K</h3>\n  </section>\n\n  <section id=\"calculationDetails\" class=\"section scale-up-horizontal-center\">\n    <h3>Cantidad a fabricar:</h3>\n    <input type=\"number\" id=\"cantidadFabricar\" value=\"1\" min=\"1\" class=\"price-input\" oninput=\"calcularGanancia()\">\n    <h3>Ganancia Total: <span id=\"gananciaTotal\">0</span> K</h3>\n    <h3>Gasto Total: <span id=\"gastoTotal\">0</span> K</h3>\n    <h3>Ingredientes Totales Necesarios:</h3>\n    <ul id=\"ingredientesTotales\"></ul>\n  </section>\n\n  <!-- Nueva sección de \"Cómo funciona\" -->\n  <section class=\"container mt-5 d-flex justify-content-center\">\n    <div class=\"p-4 bg-white rounded shadow\" style=\"max-width: 600px;\">\n      <h2 class=\"text-center\">¿Cómo funciona Recetas Dofus?</h2>\n      <p class=\"mt-3\">\n        Usar Recetas Dofus es sencillo: ingresá el nombre del objeto, obtené la receta, completá precios y calculá costos y ganancias automáticamente. \n        También podés calcular los ingredientes necesarios para producciones en masa.\n      </p>\n    </div>\n  </section>\n\n  <!-- Nueva sección de Preguntas Frecuentes -->\n  <section class=\"container mt-5 d-flex justify-content-center\">\n    <div class=\"p-4 bg-white rounded shadow\" style=\"max-width: 600px;\">\n      <h2 class=\"text-center\">Preguntas Frecuentes</h2>\n      <h5 class=\"mt-3\">1. ¿Esta herramienta es gratuita?</h5>\n      <p>Sí, Recetas Dofus es completamente gratuita para todos los usuarios.</p>\n\n      <h5 class=\"mt-3\">2. ¿Necesito registrarme para usarla?</h5>\n      <p>No es necesario registrarse para buscar recetas. El registro es opcional para acceder a funciones premium.</p>\n\n      <h5 class=\"mt-3\">3. ¿Los datos de precios se actualizan?</h5>\n      <p>Los datos se basan en la API de DofusDB, por lo que reflejan el contenido disponible más reciente.</p>\n    </div>\n  </section>\n</main>\n\n\n\n\n<footer class=\"text-center mt-5\">\n  <p>© 2025 Jorge Fernández Rojo Andrés - \n    <a href=\"mailto:jf_wolf_887@hotmail.com\">Contacto</a> | \n    <a href=\"privacidad.html\">Política de Privacidad</a> |\n    <a href=\"terminos.html\">Términos y Condiciones</a>\n  </p>\n  <div class=\"mt-3\">\n    <a href=\"https://www.youtube.com/@Yotaroto\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <img src=\"images/youtube.png\" alt=\"YouTube\" width=\"32\" height=\"32\" style=\"margin-right: 10px;\">\n    </a>\n    <a href=\"https://www.linkedin.com/in/jorgeandresfernandezrojo/\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <img src=\"images/linkedin-logo.png\" alt=\"LinkedIn\" width=\"32\" height=\"32\">\n    </a>\n  </div>\n</footer>\n<!-- Modal de Verificación -->\n<div class=\"modal fade\" id=\"verificacionModal\" tabindex=\"-1\" aria-labelledby=\"verificacionModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"verificacionModalLabel\">⚠️ Cuenta no verificada</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Cerrar\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Tu cuenta todavía no está verificada. Revisá tu correo electrónico para completar la verificación.</p>\n        <p>¿No recibiste el correo? Podés solicitar uno nuevo haciendo clic en el botón de abajo.</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"btnReenviarVerificacion\">Reenviar correo de verificación</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Bootstrap Bundle con Popper -->\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\n<script src=\"js/verificarSesion.js\"></script>\n<script type=\"module\" src=\"js/render.js\"></script>\n<script type=\"module\" src=\"js/calculo.js\"></script>\n<script type=\"module\" src=\"js/search.js\"></script>\n<script src=\"js/cookies-banner.js\"></script>\n<script src=\"js/language-toggle.js\"></script>\n\n\n</body>\n</html>\n",
    "js": {
      "blog.js": "// public/js/blog.js  \ndocument.addEventListener('DOMContentLoaded', () => {  \n  const contenedorPosts = document.getElementById('contenedor-posts');  \n  const ordenarPorSelect = document.getElementById('ordenarPor');  \n  const filtroValorInput = document.getElementById('filtroValor');  \n  const aplicarFiltrosBtn = document.getElementById('aplicarFiltros');  \n  const formComentario = document.getElementById('formComentario');  \n  const comentariosModal = new bootstrap.Modal(document.getElementById('comentariosModal'));  \n    \n  // Cargar posts al iniciar  \n  cargarPosts();  \n    \n  // Evento para aplicar filtros  \n  aplicarFiltrosBtn.addEventListener('click', cargarPosts);  \n    \n  // Evento para enviar comentario  \n  formComentario.addEventListener('submit', enviarComentario);  \n    \n  async function cargarPosts() {  \n    try {  \n      const ordenarPor = ordenarPorSelect.value;  \n      const filtroValor = filtroValorInput.value;  \n        \n      const url = `/api/posts?ordenarPor=${ordenarPor}&filtroValor=${filtroValor}`;  \n      const res = await fetch(url);  \n      const data = await res.json();  \n        \n      if (!data.success) {  \n        throw new Error(data.error || 'Error al cargar los posts');  \n      }  \n        \n      renderizarPosts(data.data);  \n    } catch (error) {  \n      console.error('Error:', error);  \n      contenedorPosts.innerHTML = `<div class=\"col-12 text-center text-danger\">  \n        <p>Error al cargar los posts. Por favor, intenta de nuevo más tarde.</p>  \n      </div>`;  \n    }  \n  }  \n    \n  function renderizarPosts(posts) {  \n  if (!posts || posts.length === 0) {  \n    contenedorPosts.innerHTML = `<div class=\"col-12 text-center\">  \n      <p>No hay posts disponibles con los filtros actuales.</p>  \n    </div>`;  \n    return;  \n  }  \n  \n  contenedorPosts.innerHTML = '';  \n  \n  posts.forEach(post => {  \n    const fechaActualizacion = new Date(post.fechaActualizacion);  \n    const tiempoTranscurrido = obtenerTiempoTranscurrido(fechaActualizacion);  \n  \n    const card = document.createElement('div');\ncard.className = 'card mb-4 shadow-sm'; // agregamos sombra directamente aquí\n\ncard.innerHTML = `\n  <img src=\"${post.imagen || 'images/default-item.png'}\" class=\"card-img-top\" alt=\"${post.nombre}\">\n  <div class=\"card-body text-center\">\n    <h5 class=\"card-title\">${post.nombre}</h5>\n    \n    ${post.descripcion ? `\n      <p class=\"text-description text-muted small fst-italic\">${post.descripcion}</p>\n    ` : ''}\n\n    <p class=\"text-muted small\">${tiempoTranscurrido}</p>\n    <p class=\"text-danger fw-bold\">Gasto: ${post.gasto || 0} kamas</p>\n    <p class=\"text-success fw-bold\">Valor: ${post.valor} kamas</p>\n    \n    ${post.ganancia !== undefined ? `\n      <p class=\"fw-bold\" style=\"color: ${post.ganancia >= 0 ? 'green' : 'red'}\">\n        ${post.ganancia >= 0 ? 'Ganancia' : 'Pérdida'}: ${Math.abs(post.ganancia)} kamas\n      </p>\n    ` : ''}\n    \n    <div class=\"d-flex justify-content-center gap-2 mt-3\">\n      <button class=\"btn btn-sm btn-outline-primary like-btn\" data-id=\"${post._id}\">\n        <i class=\"fas fa-thumbs-up\"></i> ${post.likes || 0}\n      </button>\n      <button class=\"btn btn-sm btn-outline-secondary comentario-btn\" data-id=\"${post._id}\">\n        <i class=\"fas fa-comments\"></i> Comentarios\n      </button>\n    </div>\n  </div>\n`;\n\n  \n    contenedorPosts.appendChild(card);  \n  });  \n  \n  // Asignar eventos a los nuevos botones  \n  document.querySelectorAll('.like-btn').forEach(btn => {\n    btn.addEventListener('click', manejarLike);\n  });\n\n  document.querySelectorAll('.comentario-btn').forEach(btn => {\n    btn.addEventListener('click', mostrarComentarios);\n  });\n}\n\n\n  function obtenerTiempoTranscurrido(fecha) {\n    const ahora = new Date();\n    const segundos = Math.floor((ahora - fecha) / 1000);\n\n    const minutos = Math.floor(segundos / 60);\n    const horas = Math.floor(minutos / 60);\n    const dias = Math.floor(horas / 24);\n\n    if (dias > 0) return `Actualizado hace ${dias} día(s)`;\n    if (horas > 0) return `Actualizado hace ${horas} hora(s)`;\n    if (minutos > 0) return `Actualizado hace ${minutos} minuto(s)`;\n    return `Actualizado hace unos segundos`;\n  }\n\n  // Función de ejemplo para enviar comentarios\n  async function enviarComentario(e) {\n    e.preventDefault();\n    console.log('Comentario enviado (completa esta función)');\n  }\n\n  // Función de ejemplo para manejar likes\n  function manejarLike(e) {\n    const idPost = e.currentTarget.dataset.id;\n    console.log(`Like al post ${idPost} (completa esta función)`);\n  }\n\n  // Función de ejemplo para mostrar comentarios\n  function mostrarComentarios(e) {\n    const idPost = e.currentTarget.dataset.id;\n    console.log(`Mostrar comentarios del post ${idPost} (completa esta función)`);\n    comentariosModal.show();\n  }\n});\n",
      "calculo.js": "export function calcularGanancia() {\n  let gasto = 0; // Reiniciamos el gasto\n\n  // Obtener la cantidad de objetos a fabricar\n  const cantidadFabricarInput = document.getElementById(\"cantidadFabricar\");\n  const cantidadFabricar = cantidadFabricarInput ? parseInt(cantidadFabricarInput.value) || 1 : 1;\n\n  console.log(`[DEBUG] Cantidad a fabricar: ${cantidadFabricar}`);\n\n  // Obtener los ingredientes desde el dataset\n  const ingredientesElement = document.getElementById(\"ingredientes\");\n  if (!ingredientesElement || !ingredientesElement.dataset.ingredientes) {\n    console.warn(\"[WARNING] No se encontraron ingredientes en el dataset.\");\n    return;\n  }\n\n  const ingredientes = JSON.parse(ingredientesElement.dataset.ingredientes || \"[]\");\n  console.log(\"[DEBUG] Ingredientes cargados:\", ingredientes);\n\n  let ingredientesTotalesHTML = \"\";\n\n  ingredientes.forEach(ingrediente => {\n    const inputPrecio = document.getElementById(`precio-${ingrediente.id}`);\n    \n    if (!inputPrecio) {\n      console.warn(`[WARNING] No se encontró el input para el ingrediente: ${ingrediente.name}`);\n      return;\n    }\n\n    // Obtener el precio unitario ingresado por el usuario\n    const precioUnitario = parseFloat(inputPrecio.value) || 0;\n    console.log(`[DEBUG] Precio de ${ingrediente.name}: ${precioUnitario} K`);\n\n    // 🔥 Calcular el costo total del ingrediente (precio unitario * cantidad requerida)\n    const costoIngrediente = precioUnitario * ingrediente.quantity;\n    gasto += costoIngrediente; // Sumar al gasto total de la receta\n\n    // Calcular cantidad total de ingredientes requeridos según la cantidad a fabricar\n    const cantidadTotal = ingrediente.quantity * cantidadFabricar;\n    ingredientesTotalesHTML += `\n      <li>\n        <img src=\"${ingrediente.image}\" alt=\"${ingrediente.name}\" style=\"width: 40px; height: 40px; vertical-align: middle;\" />\n        ${ingrediente.name}: <strong>${cantidadTotal}</strong> unidades\n      </li>\n    `;\n  });\n\n  // 🔥 Calcular el Gasto Total multiplicando el gasto base por la cantidad a fabricar\n  const gastoTotal = gasto * cantidadFabricar;\n\n  // Verificar si el input del precio del objeto existe antes de obtener su valor\n  const precioObjetoInput = document.getElementById(\"precioObjeto\");\n  const precioObjeto = precioObjetoInput ? parseFloat(precioObjetoInput.value) || 0 : 0;\n\n  console.log(\"[DEBUG] Precio del objeto:\", precioObjeto);\n\n  // Calcular la ganancia correctamente\n  const ganancia = (precioObjeto * cantidadFabricar) - gastoTotal;\n\n  // ✅ Actualizar el Gasto en la sección verde\n  const gastoElement = document.getElementById(\"gasto\");\n  if (gastoElement) gastoElement.textContent = `${gasto} K`;\n\n  // ✅ Actualizar la Ganancia en la sección verde\n  const gananciaElement = document.getElementById(\"ganancia\");\n  if (gananciaElement) gananciaElement.textContent = `${ganancia} K`;\n\n  // ✅ Actualizar la Ganancia Total en la sección azul\n  const gananciaTotalElement = document.getElementById(\"gananciaTotal\");\n  if (gananciaTotalElement) gananciaTotalElement.textContent = `${ganancia} K`;\n\n  // ✅ Restaurar la actualización de \"Gasto Total\" en la sección azul\n  let gastoTotalElement = document.getElementById(\"gastoTotal\");\n  if (!gastoTotalElement) {\n    const calculationDetails = document.getElementById(\"calculationDetails\");\n    gastoTotalElement = document.createElement(\"h3\");\n    gastoTotalElement.id = \"gastoTotal\";\n    calculationDetails.appendChild(gastoTotalElement);\n  }\n  gastoTotalElement.textContent = `Gasto Total: ${gastoTotal} K`;\n\n  // Actualizar la lista de ingredientes totales necesarios\n  const ingredientesTotalesElement = document.getElementById(\"ingredientesTotales\");\n  if (ingredientesTotalesElement) ingredientesTotalesElement.innerHTML = ingredientesTotalesHTML;\n\n  console.log(\"[DEBUG] Cálculo completado:\");\n  console.log(` - Gasto: ${gasto} K`);\n  console.log(` - Gasto Total: ${gastoTotal} K`);\n  console.log(` - Ganancia: ${ganancia} K`);\n\n  // ✅ Sincronizar con el blog (solo si la función está definida)\n  if (typeof sincronizarConBlog === 'function') {\n    sincronizarConBlog();\n  }\n}\n\n// Asegurar que la función sea accesible globalmente\nwindow.calcularGanancia = calcularGanancia;\n",
      "consent-mode.js": "window.dataLayer = window.dataLayer || [];\r\nfunction gtag() { dataLayer.push(arguments); }\r\n\r\n// Configuración inicial del Consent Mode: denegado por defecto\r\ngtag('consent', 'default', {\r\n  'ad_storage': 'denied',\r\n  'analytics_storage': 'denied',\r\n  'wait_for_update': 500\r\n});\r\n",
      "cookies-banner.js": "document.addEventListener(\"DOMContentLoaded\", function () {\r\n  if (!localStorage.getItem(\"cookiesDecision\")) {\r\n    const banner = document.createElement(\"div\");\r\n    banner.id = \"cookieBanner\";\r\n    banner.style.position = \"fixed\";\r\nbanner.style.bottom = \"0\";\r\nbanner.style.left = \"0\";\r\nbanner.style.width = \"100%\";\r\nbanner.style.backgroundColor = \"#222\"; // Fondo oscuro\r\nbanner.style.color = \"#fff\";           // Texto blanco\r\nbanner.style.padding = \"15px\";\r\nbanner.style.textAlign = \"center\";\r\nbanner.style.zIndex = \"9999\";\r\n\r\n    banner.innerHTML = `\r\n      Este sitio utiliza cookies para análisis y funcionalidad. \r\n      <a href=\"privacidad.html\" class=\"text-warning text-decoration-underline\">Más información</a>.\r\n      <br>\r\n      <button id=\"aceptarCookies\" class=\"btn btn-success btn-sm mt-2 me-2\">Aceptar</button>\r\n      <button id=\"rechazarCookies\" class=\"btn btn-outline-light btn-sm mt-2\">Rechazar</button>\r\n    `;\r\n    document.body.appendChild(banner);\r\n\r\n    // Aceptar cookies\r\n    document.getElementById(\"aceptarCookies\").addEventListener(\"click\", function () {\r\n      gtag('consent', 'update', {\r\n        'ad_storage': 'granted',\r\n        'analytics_storage': 'granted'\r\n      });\r\n      localStorage.setItem(\"cookiesDecision\", \"accepted\");\r\n      banner.remove();\r\n    });\r\n\r\n    // Rechazar cookies\r\n    document.getElementById(\"rechazarCookies\").addEventListener(\"click\", function () {\r\n      gtag('consent', 'update', {\r\n        'ad_storage': 'denied',\r\n        'analytics_storage': 'denied'\r\n      });\r\n      localStorage.setItem(\"cookiesDecision\", \"rejected\");\r\n      banner.remove();\r\n    });\r\n  }\r\n});\r\n",
      "gtag-config.js": "gtag('js', new Date());\r\ngtag('config', 'G-GHSB8ZF8WD');\r\n",
      "gtag-init.js": "window.dataLayer = window.dataLayer || [];\r\nfunction gtag() { dataLayer.push(arguments); }\r\n",
      "lang-redirect.js": "document.addEventListener(\"DOMContentLoaded\", function () {\r\n  const lang = navigator.language || navigator.userLanguage;\r\n\r\n  const isEnglish = lang.toLowerCase().startsWith('en');\r\n  const currentPath = window.location.pathname;\r\n\r\n  // Redirige solo si estás en una versión neutral o incorrecta\r\n  if (currentPath.endsWith('/privacidad.html') && isEnglish) {\r\n    window.location.href = 'privacy.html';\r\n  } else if (currentPath.endsWith('/privacy.html') && lang.toLowerCase().startsWith('es')) {\r\n    window.location.href = 'privacidad.html';\r\n  }\r\n});\r\n",
      "language-toggle.js": "document.addEventListener(\"DOMContentLoaded\", function () {\r\n  const lang = document.documentElement.lang;\r\n\r\n  const button = document.createElement(\"div\");\r\n  button.id = \"languageToggle\";\r\n  button.textContent = lang.startsWith(\"es\") ? \"🌐 View in English\" : \"🌐 Ver en español\";\r\n  Object.assign(button.style, {\r\n    position: \"fixed\",\r\n    bottom: \"20px\",\r\n    right: \"20px\",\r\n    backgroundColor: \"#343a40\",\r\n    color: \"white\",\r\n    padding: \"8px 12px\",\r\n    borderRadius: \"30px\",\r\n    fontSize: \"14px\",\r\n    cursor: \"pointer\",\r\n    zIndex: \"9999\",\r\n    boxShadow: \"0 2px 6px rgba(0,0,0,0.3)\",\r\n    fontFamily: \"inherit\",\r\n    userSelect: \"none\"\r\n  });\r\n\r\n  button.addEventListener(\"click\", function () {\r\n    if (lang.startsWith(\"es\")) {\r\n      window.location.href = \"privacy.html\";\r\n    } else {\r\n      window.location.href = \"privacidad.html\";\r\n    }\r\n  });\r\n\r\n  document.body.appendChild(button);\r\n});\r\n",
      "login.js": "document.addEventListener('DOMContentLoaded', () => {\n    const form = document.getElementById('loginForm');\n  \n    if (form) {\n      form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n  \n        const email = document.getElementById('email').value;\n        const password = document.getElementById('password').value;\n  \n        try {\n          const response = await fetch('/api/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password })\n          });\n  \n          const data = await response.json();\n  \n          if (response.ok) {\n            // Si login exitoso, guardar token y redirigir\n            localStorage.setItem('jwtToken', data.token);\n            window.location.href = 'index.html';\n          } else if (response.status === 403 && data.error.includes('no verificada')) {\n            // Mostrar el modal en lugar de alert si la cuenta no está verificada\n            mostrarModalVerificacion();\n          } else {\n            // Mostrar otros errores\n            alert(`❌ Error: ${data.error || 'Ocurrió un error inesperado'}`);\n          }\n        } catch (error) {\n          console.error('❌ Error en login:', error);\n          alert('❌ Error de conexión. Intentá nuevamente más tarde.');\n        }\n      });\n    }\n  });\n  ",
      "recuperar.js": "const form = document.getElementById('recuperarForm');\nconst resultado = document.getElementById('resultado');\n\nform.addEventListener('submit', async (e) => {\n  e.preventDefault();\n  const email = document.getElementById('email').value.trim().toLowerCase();\n\n  try {\n    const response = await fetch('/api/recuperar', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email })\n    });\n\n    const data = await response.json();\n\n    if (data.success) {\n      resultado.textContent = '✅ Revisa tu correo electrónico para recuperar tu contraseña.';\n    } else {\n      resultado.textContent = '❌ ' + (data.error || 'No se pudo procesar la solicitud.');\n    }\n  } catch (error) {\n    resultado.textContent = '❌ Error en la conexión.';\n    console.error(error);\n  }\n});\n",
      "register.js": "console.log('🔵 Script register.js cargado correctamente'); // Confirmamos que el archivo JS se está cargando\n\nconst form = document.getElementById('registerForm');\nconst resultado = document.getElementById('resultado');\n\nif (!form) {\n  console.error('❌ No se encontró el formulario registerForm en el HTML');\n} else {\n  console.log('✅ Formulario registerForm encontrado');\n}\n\nform.addEventListener('submit', async (e) => {\n  console.log('🟡 Evento submit capturado en registerForm');\n\n  e.preventDefault();\n\n  const emailInput = document.getElementById('email');\n  const passwordInput = document.getElementById('password');\n\n  if (!emailInput || !passwordInput) {\n    console.error('❌ No se encontraron los campos email o password en el formulario');\n    return;\n  }\n\n  const email = emailInput.value;\n  const password = passwordInput.value;\n\n  console.log('📤 Preparando envío de datos:', { email, password });\n\n  // 💥💥💥 AGREGÁ ESTE LOG\n  console.log('🛫 Lanzando fetch hacia /api/register...');\n\n  try {\n    const response = await fetch('/api/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password })\n    });\n\n    console.log('📥 Respuesta recibida del servidor:', response);\n\n    const data = await response.json();\n    console.log('📄 Respuesta parseada a JSON:', data);\n\n    if (response.ok) {\n      console.log('✅ Registro exitoso, preparando redirección...');\n      resultado.textContent = '✅ Registro exitoso. Revisa tu correo para verificar tu cuenta.';\n      \n      setTimeout(() => {\n        console.log('➡️ Redirigiendo a login.html');\n        window.location.href = 'login.html';\n      }, 3000);\n    } else {\n      console.error('❌ Registro fallido. Error recibido:', data.error || 'Error desconocido');\n      resultado.textContent = '❌ Error: ' + (data.error || 'No se pudo registrar');\n    }\n  } catch (error) {\n    console.error('❌ Error en la conexión o fetch fallido:', error);\n    resultado.textContent = '❌ Error en la conexión.';\n  }\n});\n",
      "render.js": "import { calcularGanancia } from './calculo.js';\n\n// Función para renderizar listas de efectos\nexport const renderEffects = (effects) => {\n  if (!effects || effects.length === 0) {\n    return \"<li>Sin efectos disponibles</li>\";\n  }\n  return effects\n    .map(\n      (effect) =>\n        `<li>${effect.characteristic || \"Efecto desconocido\"}: ${effect.from || 0} a ${effect.to || 0}</li>`\n    )\n    .join(\"\");\n};\n\n// Función para renderizar la receta en el frontend con inputs de precios\nexport const renderRecipe = (recipe) => {\n  if (!recipe || recipe.length === 0) {\n    return \"<li>Receta no disponible</li>\";\n  }\n\n  return recipe.map(ingredient => {\n    const inputId = `precio-${ingredient.id}`;\n    return `\n      <li>\n        <img src=\"${ingredient.image}\" alt=\"${ingredient.name}\" style=\"width: 40px; height: 40px; vertical-align: middle;\" />\n        ${ingredient.name} (Cantidad: ${ingredient.quantity || \"N/A\"})\n        <input type=\"number\" class=\"price-input\" id=\"${inputId}\" placeholder=\"Precio por unidad\">\n      </li>\n    `;\n  }).join(\"\");\n};\n\n// ✅ Función mejorada para asignar eventos de cálculo a los inputs después de renderizar la receta\nexport function asignarEventosCalculo() {\n  document.querySelectorAll(\".price-input\").forEach(input => {\n    input.removeEventListener(\"input\", calcularGanancia); // 🔥 Evita eventos duplicados\n    input.addEventListener(\"input\", () => {\n      console.log(`[DEBUG] Evento disparado en: ${input.id}`);\n      calcularGanancia();\n    });\n  });\n}\n",
      "reset.js": "const form = document.getElementById('resetForm');\nconst resultado = document.getElementById('resultado');\n\n// 🧠 Obtener el token de la URL\nconst params = new URLSearchParams(window.location.search);\nconst token = params.get('token');\n\nif (!token) {\n  resultado.textContent = '❌ Token no proporcionado en el enlace.';\n  form.style.display = 'none';\n}\n\nform.addEventListener('submit', async (e) => {\n  e.preventDefault();\n\n  const password = document.getElementById('password').value;\n  const confirmPassword = document.getElementById('confirmPassword').value;\n\n  if (password !== confirmPassword) {\n    resultado.textContent = '❌ Las contraseñas no coinciden.';\n    return;\n  }\n\n  try {\n    const res = await fetch('/api/reset', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ password, token })\n    });\n\n    const data = await res.json();\n\n    if (data.success) {\n      resultado.textContent = '✅ Contraseña actualizada correctamente. Redirigiendo...';\n      setTimeout(() => window.location.href = 'login.html', 2000);\n    } else {\n      resultado.textContent = '❌ ' + (data.error || 'Error al actualizar la contraseña.');\n    }\n\n  } catch (err) {\n    console.error(err);\n    resultado.textContent = '❌ Error en la conexión con el servidor.';\n  }\n});\n",
      "search.js": "import { renderRecipe, asignarEventosCalculo } from './render.js';\r\nimport { calcularGanancia } from './calculo.js';\r\nlet imagenBuscada = \"\";\r\nconst form = document.getElementById('searchForm');\r\nconst recipeSummary = document.getElementById('recipeSummary');\r\nconst calculationDetails = document.getElementById('calculationDetails');\r\nconst ingredientesList = document.getElementById('ingredientes');\r\nconst ingredientesTotalesList = document.getElementById('ingredientesTotales');\r\n\r\n// Agregamos un evento para manejar el envío del formulario\r\nform.addEventListener(\"submit\", async (e) => {\r\n  e.preventDefault();\r\n\r\n  const objectNameRaw = document.getElementById(\"objectName\").value.trim();\r\n  const objectName = objectNameRaw.normalize(\"NFC\");\r\n\r\n  console.log(\"[DEBUG] Nombre del objeto enviado:\", objectName);\r\n\r\n  if (!objectName) {\r\n    recipeSummary.innerHTML =\r\n      '<p style=\"color: red;\">Por favor, ingresa el nombre de un objeto.</p>';\r\n    calculationDetails.innerHTML = \"\";\r\n    return;\r\n  }\r\n\r\n  try {\r\n    recipeSummary.innerHTML = \"<p>Buscando...</p>\";\r\n    calculationDetails.innerHTML = \"\";\r\n\r\n    const response = await fetch(\"/api/recipes/search\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ objectName }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    if (data.success && data.data) {\r\n       const item = data.data;\r\n      window.item = item;\r\n      imagenBuscada = item.image || item.img || \"/default-image.png\";\r\n      console.log(\"[DEBUG] Datos recibidos del servidor:\", data);\r\n      console.log(\"[DEBUG] Datos recibidos del servidor:\", item);\r\n\r\n      recipeSummary.innerHTML = `\r\n        <h2 id=\"nombreObjeto\">${item.name || \"Nombre no disponible\"}</h2>\r\n        \r\n        <h3>Precio de Venta:</h3>\r\n        <input type=\"number\" id=\"precioObjeto\" class=\"price-input\" placeholder=\"Ingrese precio\">\r\n\r\n        <h3>Receta:</h3>\r\n        <ul id=\"ingredientes\">${renderRecipe(item.recipe)}</ul>\r\n\r\n        <h3>Gasto: <span id=\"gasto\">0</span> K</h3>\r\n        <h3>Ganancia: <span id=\"ganancia\">0</span> K</h3>\r\n      `;\r\n\r\n      calculationDetails.innerHTML = `\r\n        <label>Cantidad a fabricar:\r\n          <input type=\"number\" id=\"cantidadFabricar\" value=\"1\" min=\"1\" class=\"price-input\">\r\n        </label>\r\n\r\n        <h3>Ganancia Total: <span id=\"gananciaTotal\">0</span> K</h3>\r\n\r\n        <h3>Ingredientes Totales Necesarios:</h3>\r\n        <ul id=\"ingredientesTotales\"></ul>\r\n      `;\r\n\r\n      document.getElementById(\"ingredientes\").dataset.ingredientes = JSON.stringify(item.recipe);\r\n      asignarEventosCalculo();\r\n\r\n    } else {\r\n      recipeSummary.innerHTML = \"<p>No se encontraron resultados para tu búsqueda.</p>\";\r\n      calculationDetails.innerHTML = \"\";\r\n      console.log(\"[DEBUG] Respuesta sin datos:\", data);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"[ERROR] Error en la búsqueda:\", error);\r\n    recipeSummary.innerHTML =\r\n      '<p style=\"color: red;\">Hubo un error al realizar la búsqueda. Inténtalo de nuevo más tarde.</p>';\r\n    calculationDetails.innerHTML = \"\";\r\n  }\r\n});\r\n\r\nfunction sincronizarConBlog() {\r\n  const nombre = document.getElementById(\"nombreObjeto\")?.textContent;\r\n  const descripcion = window.item?.description || \"\";\r\n\r\n  const imagen = imagenBuscada || \"/default-image.png\";\r\n  const id = window.item?.id || null;\r\n  const slug = window.item?.slug || null;\r\n\r\n  const valor = parseInt(document.getElementById(\"precioObjeto\")?.value || \"0\");\r\nconst gasto = parseInt(document.getElementById(\"gastoTotal\")?.textContent?.replace(/\\D/g, \"\") || \"0\"); // 🔥 Corrección: extrae solo números del Gasto Total\r\nconst ganancia = parseInt(document.getElementById(\"ganancia\")?.textContent?.replace(/\\D/g, \"\") || \"0\"); // 🔥 (opcional) extrae solo números de Ganancia\r\nconst listaIngredientes = JSON.parse(document.getElementById(\"ingredientes\")?.dataset.ingredientes || \"[]\");\r\nconst ingredientes = listaIngredientes.map(ing => ing.name);\r\n\r\n\r\n  if (!nombre || valor === 0 || isNaN(valor)) {\r\n    console.warn(\"[BLOG] No se sincronizó porque falta el nombre o el valor es inválido\");\r\n    return;\r\n  }\r\n\r\n  // 🔥 Enviar también gasto y ganancia al backend\r\n  fetch(\"/api/posts/updateOrCreate\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      id,\r\n      slug,\r\n      nombre,\r\n      descripcion,\r\n      imagen,\r\n      valor,\r\n      gasto,       // 👈 Nuevo campo gasto\r\n      ganancia,    // 👈 Nuevo campo ganancia\r\n      ingredientes\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      if (data.success) {\r\n        console.log(\"[BLOG] Objeto sincronizado correctamente con el blog:\", data.mensaje);\r\n      } else {\r\n        console.warn(\"[BLOG] Error al sincronizar:\", data.error);\r\n      }\r\n    })\r\n    .catch(err => console.error(\"[BLOG] Error de red al sincronizar:\", err));\r\n}\r\n\r\nwindow.sincronizarConBlog = sincronizarConBlog;\r\n",
      "topRecetas.js": "document.addEventListener('DOMContentLoaded', async () => {\n    const contenedor = document.getElementById('contenedor-recetas');\n  \n    try {\n      const res = await fetch('data/topRecetas.json');\n      const recetas = await res.json();\n  \n      recetas.forEach(receta => {\n        const card = document.createElement('div');\n        card.className = 'col-md-4';\n  \n        card.innerHTML = `\n          <div class=\"card mb-4 shadow-sm\">\n            <img src=\"${receta.image}\" class=\"card-img-top\" alt=\"${receta.name}\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">${receta.name}</h5>\n              <p class=\"card-text\">${receta.descripcion}</p>\n              <p class=\"text-muted small\">Ingredientes: ${receta.ingredientes.join(', ')}</p>\n              <a href=\"${receta.url}\" class=\"btn btn-primary\">Ver receta</a>\n            </div>\n          </div>\n        `;\n  \n        contenedor.appendChild(card);\n      });\n    } catch (err) {\n      console.error('Error al cargar recetas destacadas:', err);\n      contenedor.innerHTML = `<p class=\"text-danger\">No se pudieron cargar las recetas. Intentalo más tarde.</p>`;\n    }\n  });\n  ",
      "utils": {
        "normalize.js": "// utils/normalize.js\r\nexport function normalize(text) {\r\n  return text.toLowerCase()\r\n             .normalize(\"NFD\")\r\n             .replace(/[\\u0300-\\u036f]/g, \"\")\r\n             .replace(/\\s+/g, \"-\")\r\n             .replace(/[^a-z0-9-]/g, \"\");\r\n}\r\n"
      },
      "verificarSesion.js": "document.addEventListener('DOMContentLoaded', async () => {\r\n  const token = localStorage.getItem('jwtToken');\r\n\r\n  const btnLogin = document.getElementById('btnRedirectLogin');\r\n  const btnRegister = document.getElementById('btnRedirectRegister');\r\n  const btnUltimasRecetas = document.getElementById('btnUltimasRecetas');\r\n  const btnVolversePremium = document.getElementById('btnVolversePremium');\r\n  const btnBeneficios = document.getElementById('btnBeneficios');\r\n  const btnLogout = document.getElementById('btnLogout');\r\n  const btnBlog = document.getElementById('btnBlog'); // 🆕 Aquí lo agregamos\r\n\r\n  if (btnBlog) {\r\n    btnBlog.addEventListener('click', () => {\r\n      window.location.href = 'blog.html';\r\n    });\r\n  }\r\n\r\n  if (!token) {\r\n    // Usuario no logueado\r\n    if (btnLogin) btnLogin.hidden = false;\r\n    if (btnRegister) btnRegister.hidden = false;\r\n    if (btnLogout) btnLogout.hidden = true;\r\n    if (btnUltimasRecetas) btnUltimasRecetas.hidden = true;\r\n    if (btnVolversePremium) btnVolversePremium.hidden = true;\r\n    if (btnBeneficios) btnBeneficios.hidden = true;\r\n  } else {\r\n    try {\r\n      const response = await fetch('/api/perfil', {\r\n        headers: { Authorization: 'Bearer ' + token }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!data.user || !data.user.isVerified) {\r\n        if (btnLogin) btnLogin.hidden = true;\r\n        if (btnRegister) btnRegister.hidden = true;\r\n        if (btnLogout) btnLogout.hidden = false;\r\n        if (btnUltimasRecetas) btnUltimasRecetas.hidden = true;\r\n        if (btnVolversePremium) btnVolversePremium.hidden = true;\r\n        if (btnBeneficios) btnBeneficios.hidden = true;\r\n\r\n        mostrarModalVerificacion();\r\n      } else {\r\n        if (btnLogin) btnLogin.hidden = true;\r\n        if (btnRegister) btnRegister.hidden = true;\r\n        if (btnLogout) btnLogout.hidden = false;\r\n        if (btnUltimasRecetas) btnUltimasRecetas.hidden = false;\r\n        if (btnVolversePremium) btnVolversePremium.hidden = false;\r\n        if (btnBeneficios) btnBeneficios.hidden = false;\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error al verificar sesión:', error);\r\n    }\r\n  }\r\n\r\n  if (btnLogout) {\r\n    btnLogout.addEventListener('click', () => {\r\n      console.log('🔴 Cerrando sesión: Borrando token...');\r\n      localStorage.removeItem('jwtToken');\r\n      window.location.href = 'login.html';\r\n    });\r\n  }\r\n\r\n  if (btnRegister) {\r\n    btnRegister.addEventListener('click', () => {\r\n      console.log('🔵 Redirigiendo a register.html');\r\n      window.location.href = 'register.html';\r\n    });\r\n  }\r\n\r\n  if (btnLogin) {\r\n    btnLogin.addEventListener('click', () => {\r\n      console.log('🔵 Redirigiendo a login.html');\r\n      window.location.href = 'login.html';\r\n    });\r\n  }\r\n});\r\n\r\n\r\n// ✅ Función para mostrar el modal de verificación\r\nfunction mostrarModalVerificacion() {\r\n  const verificacionModal = new bootstrap.Modal(document.getElementById('verificacionModal'));\r\n  verificacionModal.show();\r\n\r\n  document.getElementById('btnReenviarVerificacion').addEventListener('click', async function () {\r\n    try {\r\n      const token = localStorage.getItem('jwtToken');\r\n\r\n      if (!token) {\r\n        console.error('❌ No hay token disponible');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('/api/reenviar-verificacion', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        document.querySelector('.modal-body').innerHTML = `\r\n          <div class=\"alert alert-success\">\r\n            ✅ Correo de verificación enviado correctamente. Por favor, revisá tu bandeja de entrada.\r\n          </div>\r\n        `;\r\n        document.getElementById('btnReenviarVerificacion').style.display = 'none';\r\n      } else {\r\n        document.querySelector('.modal-body').innerHTML += `\r\n          <div class=\"alert alert-danger\">\r\n            ❌ Error: ${data.error || 'No se pudo enviar el correo de verificación'}\r\n          </div>\r\n        `;\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error al reenviar verificación:', error);\r\n      document.querySelector('.modal-body').innerHTML += `\r\n        <div class=\"alert alert-danger\">\r\n          ❌ Error de conexión. Intentá nuevamente más tarde.\r\n        </div>\r\n      `;\r\n    }\r\n  });\r\n}\r\n",
      "videoModal.js": "console.log(\"📦 Iniciando carga del modal desde videoModal.html...\");\n\nfetch('components/videoModal.html')\n  .then(response => {\n    console.log(\"✅ Respuesta del fetch:\", response.status);\n    return response.text();\n  })\n  .then(html => {\n    console.log(\"📄 HTML del modal recibido. Insertando en el DOM...\");\n    document.body.insertAdjacentHTML('beforeend', html);\n\n    const modalElement = document.getElementById('videoModal');\n    if (!modalElement) {\n      console.error(\"❌ No se encontró el elemento #videoModal en el DOM.\");\n      return;\n    }\n\n    console.log(\"🧱 Modal insertado correctamente. Inicializando Bootstrap.Modal...\");\n    const modal = new bootstrap.Modal(modalElement);\n\n    // 🎥 Mostrar siempre el modal al cargar\n    console.log(\"🎥 Mostrando modal...\");\n    modal.show();\n\n    // 🛑 Detener el video cuando se cierra el modal\n    modalElement.addEventListener('hidden.bs.modal', () => {\n      console.log(\"🛑 Modal cerrado. Deteniendo reproducción del video...\");\n\n      const iframe = document.getElementById('youtubePlaylist');\n      if (iframe) {\n        const currentSrc = iframe.src;\n        iframe.src = \"\";            // Limpiar src para detener el video\n        iframe.src = currentSrc;    // Restaurar src para reiniciar en próxima apertura\n      }\n    });\n  })\n  .catch(err => {\n    console.error(\"🚨 Error al cargar el modal:\", err);\n  });\n"
    },
    "login.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Login RD</title>\n\n  <!-- Bootstrap CSS -->\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n  <link rel=\"stylesheet\" href=\"css/style.css\">\n  <link rel=\"icon\" href=\"images/favicon.png\" type=\"image/png\">\n</head>\n<body style=\"background: url('/images/fondooficion.jpg') no-repeat center center fixed; background-size: cover;\">\n\n  <div class=\"container d-flex align-items-center justify-content-center\" style=\"min-height: 100vh;\">\n    <div class=\"p-4 bg-white rounded shadow\" style=\"width: 100%; max-width: 400px;\">\n      <h1 class=\"text-center mb-4\">Login</h1>\n\n      <form id=\"loginForm\">\n        <div class=\"mb-3\">\n          <input type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email\" required>\n        </div>\n        <div class=\"mb-3\">\n          <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Contraseña\" required>\n        </div>\n        <div class=\"d-grid gap-2\">\n          <button type=\"submit\" class=\"btn btn-warning\">Iniciar Sesión</button>\n        </div>\n      \n        <!-- ✅ Botón para recuperar contraseña -->\n        <div class=\"text-center mt-3\">\n          <a href=\"recuperar.html\" class=\"btn btn-link text-decoration-none\">¿Olvidaste tu contraseña?</a>\n        </div>\n      </form>\n      \n\n      <pre id=\"resultado\" class=\"mt-3\"></pre>\n    </div>\n  </div>\n\n  <!-- Bootstrap Bundle -->\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\n\n  <script>\n    const form = document.getElementById('loginForm');\n    const resultado = document.getElementById('resultado');\n\n    form.addEventListener('submit', async (e) => {\n      e.preventDefault();\n      const email = document.getElementById('email').value;\n      const password = document.getElementById('password').value;\n\n      try {\n        const response = await fetch('/api/login', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ email, password })\n        });\n\n        const data = await response.json();\n\n        if (data.token) {\n          localStorage.setItem('jwtToken', data.token);\n\n          resultado.textContent = '✅ Login exitoso. Redirigiendo...';\n          setTimeout(() => window.location.href = 'index.html', 1000);\n        } else {\n          resultado.textContent = '❌ Error: ' + data.error;\n        }\n      } catch (error) {\n        resultado.textContent = '❌ Error en la conexión.';\n        console.error(error);\n      }\n    });\n  </script>\n\n</body>\n</html>\n",
    "perfil.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Mi Perfil - Recetas Dofus</title>\n  <link rel=\"stylesheet\" href=\"styles.css\"> <!-- Asegurate que esté bien enlazado -->\n</head>\n<body>\n  <h1>👤 Mi Perfil</h1>\n\n  <div class=\"container\">\n    <div class=\"section\" id=\"infoPerfil\">\n      <p>Cargando información del perfil...</p>\n    </div>\n\n    <div class=\"section\">\n      <button onclick=\"window.location.href='/index.html'\">Ir a la Página Principal</button>\n      <button onclick=\"cerrarSesion()\">Cerrar Sesión</button>\n    </div>\n  </div>\n\n  <script>\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      window.location.href = \"/login.html\";\n    } else {\n      fetch('/api/perfil', {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      })\n      .then(res => {\n        if (!res.ok) throw new Error(\"No autorizado\");\n        return res.json();\n      })\n      .then(data => {\n        const user = data.user;\n        document.getElementById('infoPerfil').innerHTML = `\n          <p><strong>Email:</strong> ${user.email}</p>\n          <p><strong>Premium:</strong> ${user.isPremium ? 'Sí' : 'No'}</p>\n        `;\n      })\n      .catch(() => {\n        localStorage.removeItem('token');\n        window.location.href = \"/login.html\";\n      });\n    }\n\n    function cerrarSesion() {\n      localStorage.removeItem('token');\n      window.location.href = \"/index.html\";\n    }\n  </script>\n</body>\n</html>\n",
    "privacidad.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Política de Privacidad</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"stylesheet\" href=\"css/style.css\">\n</head>\n<body>\n  <h1>Política de Privacidad</h1>\n\n  <p>En <strong>Recetas Dofus</strong> valoramos tu privacidad y nos comprometemos a proteger la información que compartís con nosotros. Este documento explica cómo usamos las cookies y qué tipo de datos podemos recopilar.</p>\n\n  <h2>1. ¿Qué datos recolectamos?</h2>\n  <p>No recolectamos información personal identificable. El sitio utiliza tecnologías de terceros (como Google Analytics) para recopilar datos anónimos sobre navegación, como:</p>\n  <ul>\n    <li>Páginas visitadas</li>\n    <li>Duración de la sesión</li>\n    <li>Ubicación geográfica aproximada</li>\n    <li>Tipo de dispositivo y navegador</li>\n  </ul>\n\n  <h2>2. Uso de cookies</h2>\n  <p>Utilizamos cookies únicamente con fines estadísticos, de rendimiento y mejora de la experiencia del usuario. No realizamos segmentación publicitaria directa ni rastreo personalizado fuera del sitio.</p>\n\n  <h2>3. Herramientas de terceros</h2>\n  <p>Este sitio emplea <strong>Google Analytics</strong> y <strong>Google AdSense</strong>, que pueden usar cookies y tecnologías similares para analizar el uso del sitio o mostrar anuncios. Podés consultar sus políticas aquí:</p>\n  <ul>\n    <li><a href=\"https://policies.google.com/privacy?hl=es\" target=\"_blank\">Política de privacidad de Google</a></li>\n    <li><a href=\"https://policies.google.com/technologies/cookies?hl=es\" target=\"_blank\">Política de cookies de Google</a></li>\n  </ul>\n\n  <h2>4. Consentimiento</h2>\n  <p>Al ingresar al sitio por primera vez, se te solicita tu consentimiento para el uso de cookies. Podés modificar tu decisión en cualquier momento utilizando el siguiente botón:</p>\n  <button onclick=\"localStorage.removeItem('cookiesDecision'); location.reload();\">\n    Cambiar preferencias de cookies\n  </button>\n\n  <h2>5. Contacto</h2>\n  <p>Si tenés preguntas sobre esta política o querés ejercer tus derechos sobre tus datos, escribinos a: <a href=\"mailto:jf_wolf_887@hotmail.com\">jf_wolf_887@hotmail.com</a></p>\n\n  <p><a href=\"index.html\">← Volver al inicio</a></p>\n  <p>\n  <a href=\"privacy.html\">🌐 View this page in English</a>\n</p>\n<script src=\"js/lang-redirect.js\"></script>\n\n</body>\n</html>\n",
    "privacy.html": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Privacy Policy</title>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"css/style.css\">\r\n</head>\r\n<body>\r\n  <h1>Privacy Policy</h1>\r\n\r\n  <p>At <strong>Recetas Dofus</strong>, we value your privacy and are committed to protecting the information you share with us. This document explains how we use cookies and what kind of data we may collect.</p>\r\n\r\n  <h2>1. What data do we collect?</h2>\r\n  <p>We do not collect personally identifiable information. This website uses third-party technologies (such as Google Analytics) to collect anonymous usage data like:</p>\r\n  <ul>\r\n    <li>Visited pages</li>\r\n    <li>Session duration</li>\r\n    <li>Approximate geographic location</li>\r\n    <li>Browser and device type</li>\r\n  </ul>\r\n\r\n  <h2>2. Use of cookies</h2>\r\n  <p>We use cookies strictly for statistical purposes and to improve the user experience. We do not engage in personalized tracking or targeted advertising outside this site.</p>\r\n\r\n  <h2>3. Third-party tools</h2>\r\n  <p>This website uses <strong>Google Analytics</strong> and <strong>Google AdSense</strong>, which may use cookies and similar technologies to analyze traffic or serve ads. You can review their policies here:</p>\r\n  <ul>\r\n    <li><a href=\"https://policies.google.com/privacy\" target=\"_blank\">Google Privacy Policy</a></li>\r\n    <li><a href=\"https://policies.google.com/technologies/cookies\" target=\"_blank\">Google Cookies Policy</a></li>\r\n  </ul>\r\n\r\n  <h2>4. Consent</h2>\r\n  <p>When you first visit the site, we request your consent to use cookies. You can change your decision at any time using the button below:</p>\r\n  <button onclick=\"localStorage.removeItem('cookiesDecision'); location.reload();\">\r\n    Change cookie preferences\r\n  </button>\r\n\r\n  <h2>5. Contact</h2>\r\n  <p>If you have questions or wish to exercise your rights regarding your data, contact us at: <a href=\"mailto:jf_wolf_887@hotmail.com\">jf_wolf_887@hotmail.com</a></p>\r\n\r\n  <p><a href=\"index.html\">← Return to homepage</a></p>\r\n  <p><a href=\"privacidad.html\">🌐 Ver esta página en español</a></p>\r\n\r\n  <!-- Script de redirección de idioma -->\r\n  <script src=\"js/lang-redirect.js\"></script>\r\n</body>\r\n</html>\r\n",
    "recuperar.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Recuperar Contraseña</title>\n\n  <!-- Bootstrap CSS -->\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"css/style.css\">\n  <link rel=\"icon\" href=\"images/favicon.png\" type=\"image/png\">\n</head>\n<body style=\"background: url('/images/fondooficion.jpg') no-repeat center center fixed; background-size: cover;\">\n\n  <div class=\"container d-flex align-items-center justify-content-center\" style=\"min-height: 100vh;\">\n    <div class=\"p-4 bg-white rounded shadow\" style=\"width: 100%; max-width: 400px;\">\n      <h2 class=\"text-center mb-4\">Recuperar Contraseña</h2>\n\n      <form id=\"recuperarForm\">\n        <div class=\"mb-3\">\n          <input type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Ingresá tu email\" required>\n        </div>\n        <div class=\"d-grid gap-2\">\n          <button type=\"submit\" class=\"btn btn-primary\">Enviar enlace de recuperación</button>\n        </div>\n      </form>\n\n      <pre id=\"resultado\" class=\"mt-3\"></pre>\n\n      <div class=\"text-center mt-2\">\n        <a href=\"login.html\" class=\"btn btn-link text-decoration-none\">← Volver al login</a>\n      </div>\n    </div>\n  </div>\n\n  <!-- Bootstrap Bundle -->\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\n  <!-- Tu script separado -->\n  <script src=\"js/recuperar.js\"></script>\n</body>\n</html>\n",
    "register.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Registro RD</title>\n  <link rel=\"stylesheet\" href=\"css/style.css\" />\n</head>\n<body>\n  <div style=\"text-align: center; margin-top: 50px;\">\n    <h1>Crear Cuenta</h1>\n\n    <form id=\"registerForm\" style=\"display: inline-block; text-align: left;\">\n      <input type=\"email\" id=\"email\" placeholder=\"Email\" required style=\"display: block; margin: 10px 0;\"><br>\n      <input type=\"password\" id=\"password\" placeholder=\"Contraseña\" required style=\"display: block; margin: 10px 0;\"><br>\n      <button type=\"submit\" id=\"btnRegister\">Registrarse</button>\n    </form>\n\n    <pre id=\"resultado\" style=\"margin-top: 20px;\"></pre>\n  </div>\n\n  <!-- Script externo -->\n  <script type=\"module\" src=\"js/register.js\"></script>\n\n</body>\n</html>\n",
    "reset.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Restablecer Contraseña</title>\n\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"css/style.css\">\n  <link rel=\"icon\" href=\"images/favicon.png\" type=\"image/png\">\n</head>\n<body style=\"background: url('/images/fondooficion.jpg') no-repeat center center fixed; background-size: cover;\">\n\n  <div class=\"container d-flex align-items-center justify-content-center\" style=\"min-height: 100vh;\">\n    <div class=\"p-4 bg-white rounded shadow\" style=\"width: 100%; max-width: 400px;\">\n      <h2 class=\"text-center mb-4\">Restablecer Contraseña</h2>\n\n      <form id=\"resetForm\">\n        <div class=\"mb-3\">\n          <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Nueva contraseña\" required>\n        </div>\n        <div class=\"mb-3\">\n          <input type=\"password\" id=\"confirmPassword\" class=\"form-control\" placeholder=\"Confirmar contraseña\" required>\n        </div>\n        <div class=\"d-grid gap-2\">\n          <button type=\"submit\" class=\"btn btn-success\">Restablecer</button>\n        </div>\n      </form>\n\n      <pre id=\"resultado\" class=\"mt-3 text-danger\"></pre>\n      <div class=\"text-center mt-2\">\n        <a href=\"login.html\" class=\"btn btn-link text-decoration-none\">← Volver al login</a>\n      </div>\n    </div>\n  </div>\n\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\n  <script src=\"js/reset.js\"></script>\n</body>\n</html>\n",
    "robots.txt": "User-agent: *\nAllow: /\nSitemap: https://recetasdofus.com.ar/sitemap.xml\n",
    "sitemap.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n  <url>\n    <loc>https://recetasdofus.com.ar/</loc>\n    <lastmod>2025-04-07</lastmod>\n    <changefreq>monthly</changefreq>\n    <priority>1.0</priority>\n  </url>\n</urlset>\n",
    "terminos.html": "<!DOCTYPE html>\n\n<html lang=\"es\">\n\n<head>\n\n  <meta charset=\"UTF-8\">\n\n  <title>Términos y Condiciones</title>\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n  <link rel=\"stylesheet\" href=\"css/style.css\">\n\n</head>\n\n<body>\n\n  <h1>Términos y Condiciones</h1>\n\n\n\n  <p>Al utilizar el sitio <strong>DofusDB Recipe Search</strong>, aceptás los siguientes términos y condiciones:</p>\n\n\n\n  <h2>1. Propósito del sitio</h2>\n\n  <p>Este sitio fue creado con fines informativos y educativos. Permite calcular costos y ganancias aproximadas de recetas dentro del juego <strong>Dofus</strong>.</p>\n\n\n\n  <h2>2. No afiliación</h2>\n\n  <p>DofusDB Recipe Search no está afiliado de ninguna manera con <strong>ANKAMA</strong>, sus marcas o sus productos. Dofus es una marca registrada de Ankama Games.</p>\n\n\n\n  <h2>3. Uso de datos</h2>\n\n  <p>Los datos utilizados provienen de fuentes públicas o APIs de terceros. No se garantiza que estén siempre actualizados o completos.</p>\n\n\n\n  <h2>4. Limitación de responsabilidad</h2>\n\n  <p>El uso del sitio es bajo tu propia responsabilidad. No se garantiza la exactitud de los resultados ni se asume responsabilidad por pérdidas dentro del juego.</p>\n\n\n\n  <h2>5. Cambios</h2>\n\n  <p>Los Términos y Condiciones pueden cambiar sin previo aviso. Se recomienda revisarlos periódicamente.</p>\n\n\n\n  <h2>6. Contacto</h2>\n\n  <p>Si tenés preguntas o sugerencias, podés escribirme a <a href=\"mailto:jf_wolf_887@hotmail.com\">jf_wolf_887@hotmail.com</a>.</p>\n\n\n\n  <p><a href=\"index.html\">← Volver al inicio</a></p>\n\n</body>\n\n</html>",
    "topRecetas.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Top Recetas de Dofus</title>\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"css/style.css\">\n  <link rel=\"icon\" href=\"images/favicon.png\" type=\"image/png\">\n</head>\n<body>\n  <header class=\"container mt-4\">\n    <h1 class=\"text-center\">🌟 Top Recetas de Dofus</h1>\n    <p class=\"text-center\">Explorá nuestras recetas destacadas con análisis de ingredientes y estrategias para maximizar tus kamas.</p>\n  </header>\n\n  <main class=\"container my-5\">\n    <div class=\"row\" id=\"contenedor-recetas\">\n      <!-- Aquí se insertarán dinámicamente las tarjetas de recetas -->\n    </div>\n  </main>\n\n  <footer class=\"text-center mt-5 mb-3\">\n    <a href=\"index.html\" class=\"btn btn-outline-primary\">← Volver al Inicio</a>\n    <p class=\"mt-3\">© 2025 Jorge Fernández Rojo Andrés</p>\n  </footer>\n\n  <script src=\"js/topRecetas.js\" type=\"module\"></script>\n</body>\n</html>\n",
    "verificacionExitosa.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Cuenta Verificada</title>\n  <style>\n    body {\n      text-align: center;\n      font-family: sans-serif;\n      background: #f0f0f0;\n      padding: 50px;\n    }\n    img {\n      width: 300px;\n      margin-top: 30px;\n    }\n    h1 {\n      color: #28a745;\n    }\n    .botones {\n      margin-top: 40px;\n    }\n    .botones a {\n      display: inline-block;\n      margin: 10px;\n      padding: 12px 24px;\n      font-size: 16px;\n      text-decoration: none;\n      color: white;\n      background-color: #007bff;\n      border-radius: 5px;\n      transition: background-color 0.3s;\n    }\n    .botones a:hover {\n      background-color: #0056b3;\n    }\n  </style>\n</head>\n<body>\n  <h1>✅ ¡Cuenta verificada con éxito!</h1>\n  <p>Gracias por unirte a Recetas Dofus. Ya podés iniciar sesión.</p>\n  <img src=\"https://img1.reactor.cc/pics/post/Wakfu-dofus-Joris-Wakfu-Gif-2774181.gif\" alt=\"Verificación Exitosa\">\n\n  <div class=\"botones\">\n    <a href=\"/perfil.html\">Ir al Perfil</a>\n    <a href=\"/index.html\">Ir a la Página Principal</a>\n  </div>\n</body>\n</html>\n",
    "verificar.html": "<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Verificar cuenta</title>\n  <style>\n    body {\n      font-family: sans-serif;\n      text-align: center;\n      padding: 40px;\n    }\n    input {\n      margin: 10px;\n      padding: 10px;\n      width: 250px;\n    }\n    button {\n      padding: 10px 20px;\n    }\n  </style>\n</head>\n<body>\n  <h1>Verificar cuenta</h1>\n  <form id=\"formVerificar\">\n    <input type=\"email\" id=\"email\" placeholder=\"Tu correo\" required><br>\n    <input type=\"text\" id=\"codigo\" placeholder=\"Código recibido\" required><br>\n    <button type=\"submit\">Verificar</button>\n  </form>\n\n  <p id=\"mensaje\"></p>\n\n  <script>\n    document.getElementById('formVerificar').addEventListener('submit', async (e) => {\n      e.preventDefault();\n      const email = document.getElementById('email').value;\n      const codigo = document.getElementById('codigo').value;\n\n      try {\n        const res = await fetch('/api/verify-code', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ email, codigo })\n        });\n        const data = await res.json();\n        document.getElementById('mensaje').textContent = data.message || '✅ Verificado correctamente';\n      } catch (err) {\n        document.getElementById('mensaje').textContent = '❌ Error al verificar.';\n        console.error(err);\n      }\n    });\n  </script>\n</body>\n</html>\n"
  },
  "server.js": "const express = require('express');\r\nconst path = require('path');\r\nconst axios = require('axios');\r\nconst { obtenerIngredientes } = require('./src/utils/scraper');\r\nconst authRoutes = require('./src/routes/authRoutes');\r\nconst mongoose = require('mongoose');\r\nconst verificarToken = require('./src/middlewares/authMiddleware');\r\nconst blogRoutes = require('./src/routes/blogRoutes');\r\nrequire('dotenv').config();\r\n\r\nconst app = express();\r\nconst DOFUSDB_API_URL = process.env.DOFUSDB_API_URL || \"https://api.dofusdb.fr/items\";\r\n\r\n// Función para quitar acentos\r\nfunction quitarAcentos(str) {\r\n  return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n}\r\n\r\n// Middlewares\r\napp.use(express.static(path.join(__dirname, 'public')));\r\napp.use(express.json());\r\n\r\n// Rutas\r\napp.use('/api', blogRoutes);\r\napp.use('/api', authRoutes);\r\n\r\n// Conexión MongoDB\r\nmongoose.connect(process.env.MONGO_URI)\r\n  .then(() => console.log('✅ Conectado correctamente a MongoDB Atlas'))\r\n  .catch(err => console.error('❌ Error al conectar a MongoDB Atlas:', err));\r\n\r\n// Ruta búsqueda recetas con fallback de acentos\r\napp.post('/api/recipes/search', async (req, res) => {\r\n  let { objectName } = req.body;\r\n\r\n  if (!objectName || !/^[\\p{L}0-9\\s+]+$/u.test(objectName)) {\r\n    return res.status(400).json({ success: false, error: 'El nombre del objeto es inválido o está vacío.' });\r\n  }\r\n\r\n  // Decodificar + a espacios\r\n  objectName = decodeURIComponent(objectName).replace(/\\+/g, ' ');\r\n\r\n  // Función interna para consultar la API externa\r\n  async function buscarEnApi(nombreBuscado) {\r\n  const formattedName = nombreBuscado.split(' ').join('+');\r\n  const url = `${DOFUSDB_API_URL}?slug.es[$search]=${formattedName}&level[$gte]=0&level[$lte]=200&lang=es`;\r\n\r\n  console.log(`[DEBUG] URL construida: ${url}`);\r\n\r\n  try {\r\n    const response = await axios.get(url, {\r\n      headers: {\r\n        accept: \"application/json, text/plain, */*\",\r\n        \"accept-language\": \"es-ES,es;q=0.9\",\r\n        Referer: \"https://dofusdb.fr/\",\r\n      },\r\n    });\r\n\r\n    if (response.data.data.length === 0) {\r\n      console.log(`[INFO] No se encontraron resultados para: ${nombreBuscado}`);\r\n      return null;\r\n    }\r\n\r\n    const item = response.data.data[0];\r\n    const recipeDetails = await obtenerIngredientes(item.id);\r\n\r\n    return {\r\n  name: item.name?.es || 'Nombre no disponible',\r\n  description: item.description?.es || '', // ✅ Agregado\r\n  recipe: recipeDetails,\r\n  image: item.img || \"/default-image.png\"\r\n};\r\n\r\n  } catch (error) {\r\n    console.error('[ERROR] Error al buscar la receta:', error.message);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\n  try {\r\n    // Primero busco con el nombre original\r\n    let resultado = await buscarEnApi(objectName);\r\n\r\n    // Si no encontró, busco sin acentos (fallback)\r\n    if (!resultado) {\r\n      const nombreSinAcentos = quitarAcentos(objectName);\r\n      resultado = await buscarEnApi(nombreSinAcentos);\r\n    }\r\n\r\n    if (!resultado) {\r\n      return res.json({ success: true, data: null });\r\n    }\r\n\r\n    res.json({ success: true, data: resultado });\r\n\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, error: 'Error al buscar la receta.' });\r\n  }\r\n});\r\n\r\n// Ruta protegida perfil\r\napp.get('/api/perfil', verificarToken, (req, res) => {\r\n  res.json({\r\n    message: 'Perfil accedido correctamente',\r\n    usuario: req.user\r\n  });\r\n});\r\n\r\n// Servidor\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`🚀 Servidor corriendo en http://localhost:${PORT}`);\r\n});\r\n",
  "src": {
    "models": {
      "BlogPost.js": "// src/models/BlogPost.js  \nconst mongoose = require('mongoose');  \n  \nconst commentSchema = new mongoose.Schema({  \n  usuario: {  \n    type: mongoose.Schema.Types.ObjectId,  \n    ref: 'User',  \n    required: true  \n  },  \n  texto: {  \n    type: String,  \n    required: true  \n  },  \n  fecha: {  \n    type: Date,  \n    default: Date.now  \n  }  \n});  \n  \nconst blogPostSchema = new mongoose.Schema({  \n  nombre: {  \n    type: String,  \n    required: true,\n    unique: true,\n    trim: true  \n  },  \n  descripcion: String,  \n  imagen: String,  \n  valor: {  \n    type: Number,  \n    default: 0  \n  },  \n  gasto: {   // 👈 Campo añadido para guardar el gasto\n    type: Number,\n    default: 0\n  },\n  ganancia: {   // 👈 Campo añadido para guardar la ganancia (opcional)\n    type: Number,\n    default: 0\n  },  \n  ingredientes: [String],  \n  likes: {  \n    type: Number,  \n    default: 0  \n  },  \n  usuariosLike: [{  \n    type: mongoose.Schema.Types.ObjectId,  \n    ref: 'User'  \n  }],  \n  comentarios: [commentSchema],  \n  fechaCreacion: {  \n    type: Date,  \n    default: Date.now  \n  },  \n  fechaActualizacion: {  \n    type: Date,  \n    default: Date.now  \n  }  \n});\n\n  \n// Middleware para actualizar fechaActualizacion automáticamente  \nblogPostSchema.pre('save', function(next) {  \n  if (this.isModified()) {  \n    this.fechaActualizacion = Date.now();  \n  }  \n  next();  \n});  \n  \nmodule.exports = mongoose.model('BlogPost', blogPostSchema);"
    },
    "routes": {
      "blogRoutes.js": "// src/routes/blogRoutes.js  \nconst express = require('express');  \nconst router = express.Router();  \nconst BlogPost = require('../models/BlogPost');  \nconst verificarToken = require('../middlewares/authMiddleware');  \n  \n// Obtener todos los posts (con filtros opcionales)  \nrouter.get('/posts', async (req, res) => {  \n  try {  \n    const { ordenarPor, filtroValor } = req.query;  \n    let query = {};  \n    let sort = {};  \n      \n    // Aplicar filtro por valor mínimo si se especifica  \n    if (filtroValor) {  \n      query.valor = { $gte: parseInt(filtroValor) };  \n    }  \n      \n    // Aplicar ordenamiento  \n    if (ordenarPor === 'valor') {  \n      sort.valor = -1; // Descendente por valor  \n    } else if (ordenarPor === 'reciente') {  \n      sort.fechaActualizacion = -1; // Descendente por fecha de actualización  \n    } else {  \n      sort.fechaCreacion = -1; // Por defecto, los más nuevos primero  \n    }  \n      \n    const posts = await BlogPost.find(query)  \n      .sort(sort)  \n      .populate('usuariosLike', 'username')  \n      .populate('comentarios.usuario', 'username');  \n        \n    res.json({ success: true, data: posts });  \n  } catch (error) {  \n    console.error('Error al obtener posts:', error);  \n    res.status(500).json({ success: false, error: 'Error al obtener los posts' });  \n  }  \n});  \n  \n// Crear nuevo post (requiere autenticación)  \nrouter.post('/posts', verificarToken, async (req, res) => {  \n  try {  \n    const { nombre, descripcion, imagen, valor, ingredientes } = req.body;  \n      \n    const newPost = new BlogPost({  \n      nombre,  \n      descripcion,  \n      imagen,  \n      valor,  \n      ingredientes  \n    });  \n      \n    await newPost.save();  \n    res.status(201).json({ success: true, data: newPost });  \n  } catch (error) {  \n    console.error('Error al crear post:', error);  \n    res.status(500).json({ success: false, error: 'Error al crear el post' });  \n  }  \n});  \n  \n// Dar like a un post  \nrouter.post('/posts/:id/like', verificarToken, async (req, res) => {  \n  try {  \n    const post = await BlogPost.findById(req.params.id);  \n    if (!post) {  \n      return res.status(404).json({ success: false, error: 'Post no encontrado' });  \n    }  \n      \n    // Verificar si el usuario ya dio like  \n    const userIndex = post.usuariosLike.indexOf(req.user.id);  \n      \n    if (userIndex === -1) {  \n      // Añadir like  \n      post.likes += 1;  \n      post.usuariosLike.push(req.user.id);  \n    } else {  \n      // Quitar like  \n      post.likes -= 1;  \n      post.usuariosLike.splice(userIndex, 1);  \n    }  \n      \n    await post.save();  \n    res.json({ success: true, data: post });  \n  } catch (error) {  \n    console.error('Error al procesar like:', error);  \n    res.status(500).json({ success: false, error: 'Error al procesar el like' });  \n  }  \n});  \n  \n// Añadir comentario  \nrouter.post('/posts/:id/comentario', verificarToken, async (req, res) => {  \n  try {  \n    const { texto } = req.body;  \n      \n    if (!texto) {  \n      return res.status(400).json({ success: false, error: 'El comentario no puede estar vacío' });  \n    }  \n      \n    const post = await BlogPost.findById(req.params.id);  \n    if (!post) {  \n      return res.status(404).json({ success: false, error: 'Post no encontrado' });  \n    }  \n      \n    post.comentarios.push({  \n      usuario: req.user.id,  \n      texto  \n    });  \n      \n    await post.save();  \n      \n    // Obtener el post actualizado con los datos de usuario en comentarios  \n    const updatedPost = await BlogPost.findById(req.params.id)  \n      .populate('comentarios.usuario', 'username');  \n        \n    res.json({ success: true, data: updatedPost });  \n  } catch (error) {  \n    console.error('Error al añadir comentario:', error);  \n    res.status(500).json({ success: false, error: 'Error al añadir el comentario' });  \n  }  \n});  \n  \n// Crear o actualizar automáticamente un post desde el buscador (sin autenticación)\nrouter.post('/posts/updateOrCreate', async (req, res) => {\n  try {\n    console.log('[DEBUG] Petición recibida en updateOrCreate:', req.body);\n    const { nombre, descripcion, imagen, valor, gasto, ganancia, ingredientes } = req.body; // 👈 AÑADIDOS gasto y ganancia\n\n    if (!nombre || !valor) {\n      return res.status(400).json({ success: false, error: 'Faltan campos requeridos' });\n    }\n\n    // 🔥 Siempre eliminar versiones anteriores del objeto antes de crear uno nuevo\n    const eliminados = await BlogPost.deleteMany({ nombre });\n    console.log(`[INFO] Se eliminaron ${eliminados.deletedCount} versiones anteriores de \"${nombre}\"`);\n\n    const nuevoPost = new BlogPost({\n      nombre,\n      descripcion,\n      imagen: imagen,\n      valor,\n      gasto,      // 👈 AÑADIDO gasto\n      ganancia,   // 👈 AÑADIDO ganancia\n      ingredientes,\n      fechaCreacion: new Date(),\n      fechaActualizacion: new Date()\n    });\n\n    await nuevoPost.save();\n    return res.status(201).json({ success: true, mensaje: 'Versión actualizada del objeto agregada al blog' });\n\n  } catch (error) {\n    console.error('Error en updateOrCreate:', error);\n    return res.status(500).json({ success: false, error: 'Error interno del servidor' });\n  }\n});\n\nmodule.exports = router;",
      "recipeRoutes.js": "const express = require('express');\r\nconst router = express.Router();\r\nconst axios = require('axios');\r\nconst obtenerIngredientes = require('../utils/scraper'); // ✅ Asegúrate de que está bien importado\r\n\r\nrequire('dotenv').config();\r\n\r\n// Ruta para buscar recetas\r\nrouter.post('/search', async (req, res) => {\r\n  let { objectName } = req.body;\r\n\r\nif (!objectName || objectName.trim() === '') {\r\n  return res.status(400).json({ success: false, error: 'El nombre del objeto es obligatorio.' });\r\n}\r\n\r\n// Decodificar + a espacios si es necesario\r\nobjectName = decodeURIComponent(objectName).replace(/\\+/g, ' ');\r\n\r\n\r\n\r\n  try {\r\n    const response = await axios.get(process.env.DOFUSDB_API_URL, {\r\n      params: {\r\n        'slug.es[search]': objectName,\r\n        'level[$gte]': 0,\r\n        'level[$lte]': 200,\r\n        sort: '-id',\r\n        lang: 'es',\r\n      },\r\n    });\r\n\r\n    if (response.data.data.length === 0) {\r\n      return res.json({ success: true, data: null });\r\n    }\r\n\r\n    const item = response.data.data[0];\r\n\r\n    // ✅ Llamar correctamente a la función\r\n    const recipeDetails = await obtenerIngredientes(item.id);\r\n\r\n    const formattedData = {\r\n      name: item.name?.es || 'Nombre no disponible',\r\n      recipe: recipeDetails,\r\n      image: item.img || '/default-image.png',\r\n    };\r\n\r\n    res.json({ success: true, data: formattedData });\r\n  } catch (error) {\r\n    console.error('Error al buscar en la API:', error.message);\r\n    res.status(500).json({ success: false, error: 'Error al buscar la receta.' });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"
    },
    "utils": {
      "scraper.js": "const axios = require('axios');\nrequire('dotenv').config(); \n\nconsole.log('[DEBUG] scraper.js ha sido cargado correctamente');\n\nasync function obtenerIngredientes(itemId) {\n    try {\n        // Construir la URL de la API con el ID del objeto\n        const apiUrl = `https://api.dofusdb.fr/recipes?resultId=${itemId}&lang=es`;\n        console.debug(`[DEBUG] Solicitando datos desde: ${apiUrl}`);\n\n        // Hacer la solicitud HTTP\n        const response = await axios.get(apiUrl);\n        const data = response.data.data[0]; // Extraer el primer resultado de la API\n\n        if (!data) {\n            console.error(`[ERROR] No se encontraron datos para el objeto con ID: ${itemId}`);\n            return [];\n        }\n\n        // Extraer los ingredientes y sus cantidades\n        const ingredients = data.ingredients.map((ingredient, index) => ({\n            id: ingredient.id,\n            name: ingredient.name.es, // Nombre en español\n            image: ingredient.img || '/default-image.png', // Imagen del ingrediente\n            quantity: data.quantities[index] || 1 // Cantidad correspondiente\n        }));\n\n        console.debug('[DEBUG] Ingredientes extraídos correctamente:', ingredients);\n        return ingredients;\n    } catch (error) {\n        console.error(`[ERROR] Error al obtener ingredientes:`, error.message);\n        return [];\n    }\n}\n\n// Exportar la función para ser utilizada en otros archivos\nmodule.exports = { obtenerIngredientes };\n"
    }
  }
}